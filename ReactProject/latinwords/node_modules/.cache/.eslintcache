[{"/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/index.js":"1","/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/App.js":"2","/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/reportWebVitals.js":"3","/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/components/Router.js":"4","/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/components/NotFound.js":"5","/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/components/NavBar.js":"6","/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/components/Posts.js":"7","/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/components/Comments.js":"8","/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/components/Search.js":"9"},{"size":559,"mtime":1641208398511,"results":"10","hashOfConfig":"11"},{"size":155,"mtime":1641644552117,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1641200502399,"results":"13","hashOfConfig":"11"},{"size":1258,"mtime":1641644419484,"results":"14","hashOfConfig":"11"},{"size":311,"mtime":1641297020742,"results":"15","hashOfConfig":"11"},{"size":2051,"mtime":1641644212903,"results":"16","hashOfConfig":"11"},{"size":3098,"mtime":1641583342892,"results":"17","hashOfConfig":"11"},{"size":1662,"mtime":1641639348208,"results":"18","hashOfConfig":"11"},{"size":3929,"mtime":1641584117813,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"6ef98p",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/index.js",[],["40","41"],"/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/App.js",[],"/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/reportWebVitals.js",[],"/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/components/Router.js",[],"/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/components/NotFound.js",[],"/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/components/NavBar.js",[],"/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/components/Posts.js",[],"/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/components/Comments.js",[],"/home/kiko/Escritorio/latin-words/ReactProject/latinwords/src/components/Search.js",["42"],"import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n\nclass Search extends Component {\n\n    state = {\n        query: null,\n        posts: [],\n        satus: null,\n        currentPage: 0,\n        stepSize: 5\n    };\n\n    componentDidMount() {\n        this.getPosts();\n        this.getQuery();\n    }\n\n    getPosts = () => {\n        let endpoint = 'https://jsonplaceholder.typicode.com/posts';\n        axios.get(endpoint)\n            .then((res) => {\n                this.setState({\n                    posts: res.data,\n                    status: 'success'\n                });\n            }).catch((err) => {\n                this.setState({\n                    posts: [],\n                    status: 'failed'\n                });\n            });\n    };\n\n    getQuery = () => {\n        let query = this.props.match.params.query;\n        this.setState({\n            query: query\n        });\n    };\n\n    getFilteredList = () => {\n        let posts = this.state.posts;\n        let query = this.state.query;\n\n        let filteredList = posts.filter((post) => {\n            return (post.title.includes(query) || post.body.includes(query));\n        });\n\n        return filteredList;\n    };\n\n    increasePage = () => {\n        let nextPage = this.state.currentPage + 1;\n        let stepSize = this.state.stepSize;\n\n        if (nextPage * stepSize < this.getFilteredList().length) {\n            this.setState({\n                currentPage: nextPage\n            });\n        }\n    };\n\n    decreasePage = () => {\n        let previousPage = this.state.currentPage - 1;\n        let stepSize = this.state.stepSize;\n\n        if (previousPage * stepSize >= 0) {\n            this.setState({\n                currentPage: previousPage\n            });\n        }\n    };\n\n    render() {\n        let stepSize = this.state.stepSize;\n        let strPostIndex = this.state.currentPage * stepSize;\n\n        if (this.state.posts.length > 0) {\n\n            let filteredList = this.getFilteredList();\n            if (filteredList.length == 0) {\n                return (\n                    <div className=\"container canvas mt-5 py-5\">\n                        <h4 className=\"text-center\">No se han encontrado elementos.</h4>\n                    </div>\n                );\n            }\n\n            let filteredPosts = filteredList.slice(strPostIndex, strPostIndex + stepSize)\n                .map((post, index) => {\n                    return (\n                        <div key={index}>\n                            <Link to={'/comments/' + post.id}>\n                                <h4 className=\"mt-4\"><strong>{post.title.toUpperCase()}</strong></h4>\n                            </Link>\n\n                            <h5 className=\"my-4\"><strong><i>{post.body}</i></strong></h5>\n                            <hr />\n                        </div>\n                    );\n                });\n\n            return (\n                <React.Fragment >\n                    <div className=\"container canvas mt-3 p-5\">\n                        <h1 className=\"text-center \">\"{this.state.query}\"</h1>\n\n                        <div className=\"my-1 text-center\">\n                            <button className=\"btn btn-primary\" onClick={this.decreasePage}>anterior</button>\n                            <span className=\"mx-3\"><strong>Página {this.state.currentPage+1}</strong></span>\n                            <button className=\"btn btn-primary\" onClick={this.increasePage}>próxima</button>\n                        </div>\n                    </div>\n\n                    <div className=\"container canvas mt-3 p-3\">\n                        {filteredPosts}\n                    </div>\n                </React.Fragment>\n            );\n        }\n\n        return (\n            <div className=\"container\">\n                <h3 className=\"text-center\">cargando...</h3>\n            </div>\n        );\n    };\n}\n\nexport default Search;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":84,"column":37,"nodeType":"49","messageId":"50","endLine":84,"endColumn":39},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]