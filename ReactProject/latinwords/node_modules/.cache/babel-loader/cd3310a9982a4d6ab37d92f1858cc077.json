{"ast":null,"code":"var _jsxFileName = \"/home/kiko/Escritorio/latin-words/latinwords/src/components/Search.js\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      query: null,\n      posts: [],\n      satus: null\n    };\n\n    this.getPosts = () => {\n      let endpoint = 'https://jsonplaceholder.typicode.com/posts';\n      axios.get(endpoint).then(res => {\n        this.setState({\n          posts: res.data,\n          status: 'success'\n        });\n      }).catch(err => {\n        this.setState({\n          posts: [],\n          status: 'failed'\n        });\n      });\n    };\n\n    this.getQuery = () => {\n      let query = this.props.match.params.query;\n      this.setState({\n        query: query\n      });\n    };\n\n    this.getFilteredList = () => {\n      let posts = this.state.posts;\n      let query = this.state.query;\n      let filteredList = posts.filter(post => {\n        return post.title.includes(query) || post.body.includes(query);\n      });\n      return filteredList;\n    };\n  }\n\n  componentDidMount() {\n    this.getPosts();\n    this.getQuery();\n  }\n\n  render() {\n    if (this.state.posts.length > 0) {\n      let filteredList = this.getFilteredList();\n\n      if (filteredList.length == 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container canvas mt-5 py-5\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: \"No se han encontrado elementos.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this);\n      }\n\n      let filteredPosts = filteredList.map((post, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: 'comment/' + post.id,\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: post.title.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container canvas\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center mt-3 p-5\",\n            children: [\"\\\"\", this.state.query, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container canvas mt-3 p-3\",\n          children: filteredPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container canvas\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/kiko/Escritorio/latin-words/latinwords/src/components/Search.js"],"names":["React","Component","Link","axios","Search","state","query","posts","satus","getPosts","endpoint","get","then","res","setState","data","status","catch","err","getQuery","props","match","params","getFilteredList","filteredList","filter","post","title","includes","body","componentDidMount","render","length","filteredPosts","map","index","id","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE3BI,KAF2B,GAEnB;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAFmB;;AAAA,SAc3BC,QAd2B,GAchB,MAAM;AACb,UAAIC,QAAQ,GAAG,4CAAf;AACAP,MAAAA,KAAK,CAACQ,GAAN,CAAUD,QAAV,EACKE,IADL,CACWC,GAAD,IAAS;AACX,aAAKC,QAAL,CAAc;AACVP,UAAAA,KAAK,EAAEM,GAAG,CAACE,IADD;AAEVC,UAAAA,MAAM,EAAE;AAFE,SAAd;AAIH,OANL,EAMOC,KANP,CAMcC,GAAD,IAAS;AACd,aAAKJ,QAAL,CAAc;AACVP,UAAAA,KAAK,EAAE,EADG;AAEVS,UAAAA,MAAM,EAAE;AAFE,SAAd;AAIH,OAXL;AAYH,KA5B0B;;AAAA,SA8B3BG,QA9B2B,GA8BhB,MAAM;AACb,UAAIb,KAAK,GAAG,KAAKc,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBhB,KAApC;AACA,WAAKQ,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAEA;AADG,OAAd;AAGH,KAnC0B;;AAAA,SAqC3BiB,eArC2B,GAqCT,MAAM;AACpB,UAAIhB,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAvB;AACA,UAAID,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AAEA,UAAIkB,YAAY,GAAGjB,KAAK,CAACkB,MAAN,CAAcC,IAAD,IAAU;AACtC,eAAQA,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBtB,KAApB,KAA8BoB,IAAI,CAACG,IAAL,CAAUD,QAAV,CAAmBtB,KAAnB,CAAtC;AACH,OAFkB,CAAnB;AAIA,aAAOkB,YAAP;AACH,KA9C0B;AAAA;;AAQ3BM,EAAAA,iBAAiB,GAAG;AAChB,SAAKrB,QAAL;AACA,SAAKU,QAAL;AACH;;AAuCDY,EAAAA,MAAM,GAAG;AACL,QAAI,KAAK1B,KAAL,CAAWE,KAAX,CAAiByB,MAAjB,GAA0B,CAA9B,EAAiC;AAE7B,UAAIR,YAAY,GAAG,KAAKD,eAAL,EAAnB;;AACA,UAAIC,YAAY,CAACQ,MAAb,IAAuB,CAA3B,EAA8B;AAC1B,4BACI;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH;;AAED,UAAIC,aAAa,GAAGT,YAAY,CAACU,GAAb,CAAiB,CAACR,IAAD,EAAOS,KAAP,KAAiB;AAClD,4BACI;AAAA,kCAEI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE,aAAWT,IAAI,CAACU,EAA1B;AAAA,mCAA8B;AAAA,qCAAI;AAAA,0BAASV,IAAI,CAACC,KAAL,CAAWU,WAAX;AAAT;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI;AAAA,sBAAKX,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,kBANJ,eASI;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA,WAAUM,KAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAeH,OAhBmB,CAApB;AAkBA,0BACI,QAAC,KAAD,CAAO,QAAP;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,sBAAd;AAAA,6BAAuC,KAAK9B,KAAL,CAAWC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,oBACK2B;AADL;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAnG0B;;AAuG/B,eAAe7B,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n\n\nclass Search extends Component {\n\n    state = {\n        query: null,\n        posts: [],\n        satus: null\n    };\n\n    componentDidMount() {\n        this.getPosts();\n        this.getQuery();\n    }\n\n\n    getPosts = () => {\n        let endpoint = 'https://jsonplaceholder.typicode.com/posts';\n        axios.get(endpoint)\n            .then((res) => {\n                this.setState({\n                    posts: res.data,\n                    status: 'success'\n                });\n            }).catch((err) => {\n                this.setState({\n                    posts: [],\n                    status: 'failed'\n                });\n            });\n    };\n\n    getQuery = () => {\n        let query = this.props.match.params.query;\n        this.setState({\n            query: query\n        });\n    };\n\n    getFilteredList = () => {\n        let posts = this.state.posts;\n        let query = this.state.query;\n\n        let filteredList = posts.filter((post) => {\n            return (post.title.includes(query) || post.body.includes(query));\n        });\n\n        return filteredList;\n    };\n\n\n\n    render() {\n        if (this.state.posts.length > 0) {\n\n            let filteredList = this.getFilteredList();\n            if (filteredList.length == 0) {\n                return (\n                    <div className=\"container canvas mt-5 py-5\">\n                        <h4 className=\"text-center\">No se han encontrado elementos.</h4>\n\n                    </div>\n                );\n            }\n\n            let filteredPosts = filteredList.map((post, index) => {\n                return (\n                    <div key={index}>\n\n                        <Link to={'comment/'+post.id}><h4><strong>{post.title.toUpperCase()}</strong></h4></Link>\n\n                        \n\n                        <h5>{post.body}</h5>\n\n\n                        <hr />\n\n\n                    </div>\n                );\n            });\n\n            return (\n                <React.Fragment >\n                    <div className=\"container canvas\">\n                        <h3 className=\"text-center mt-3 p-5\">\"{this.state.query}\"</h3>\n                    </div>\n\n                    <div className=\"container canvas mt-3 p-3\">\n                        {filteredPosts}\n                    </div>\n                </React.Fragment>\n            );\n        }\n\n        return (\n            <div className=\"container canvas\">\n                <h3>cargando...</h3>\n            </div>\n        );\n    };\n}\n\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}