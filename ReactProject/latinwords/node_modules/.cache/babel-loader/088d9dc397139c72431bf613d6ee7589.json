{"ast":null,"code":"var _jsxFileName = \"/home/kiko/Escritorio/latin-words/latinwords/src/components/Comments.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Comments extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      comments: [],\n      status: null\n    };\n\n    this.getComments = postId => {\n      let endpoint = 'https://jsonplaceholder.typicode.com/post/' + postId.toString() + '/comments';\n      axios.get(endpoint).then(res => {\n        this.setState({\n          comments: res.data,\n          status: 'success'\n        });\n      }).catch(err => {\n        this.setState({\n          comments: [],\n          status: 'failed'\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    let postId = this.props.match.params.id;\n    this.getComments(postId);\n  }\n\n  render() {\n    if (this.state.comments.length > 0) {\n      let listComment = this.state.comments.map((comment, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"email\",\n            children: [\"from: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: comment.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: comment.name.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: comment.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5\",\n        children: listComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/home/kiko/Escritorio/latin-words/latinwords/src/components/Comments.js"],"names":["React","Component","axios","Comments","state","comments","status","getComments","postId","endpoint","toString","get","then","res","setState","data","catch","err","componentDidMount","props","match","params","id","render","length","listComment","map","comment","index","email","name","toUpperCase","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BG,KAF6B,GAErB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAFqB;;AAAA,SAa7BC,WAb6B,GAadC,MAAD,IAAY;AACtB,UAAIC,QAAQ,GAAG,+CAA+CD,MAAM,CAACE,QAAP,EAA/C,GAAmE,WAAlF;AACAR,MAAAA,KAAK,CAACS,GAAN,CAAUF,QAAV,EACKG,IADL,CACUC,GAAG,IAAI;AACT,aAAKC,QAAL,CAAc;AACVT,UAAAA,QAAQ,EAAEQ,GAAG,CAACE,IADJ;AAEVT,UAAAA,MAAM,EAAE;AAFE,SAAd;AAIH,OANL,EAMOU,KANP,CAMaC,GAAG,IAAI;AACZ,aAAKH,QAAL,CAAc;AACVT,UAAAA,QAAQ,EAAE,EADA;AAEVC,UAAAA,MAAM,EAAE;AAFE,SAAd;AAIH,OAXL;AAYH,KA3B4B;AAAA;;AAQ7BY,EAAAA,iBAAiB,GAAG;AAChB,QAAIV,MAAM,GAAG,KAAKW,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAArC;AACA,SAAKf,WAAL,CAAiBC,MAAjB;AACH;;AAkBDe,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKnB,KAAL,CAAWC,QAAX,CAAoBmB,MAApB,GAA6B,CAAjC,EAAoC;AAChC,UAAIC,WAAW,GAAG,KAAKrB,KAAL,CAAWC,QAAX,CACbqB,GADa,CACT,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrB,4BACI;AAAiB,UAAA,SAAS,EAAC,qBAA3B;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA,8CAA2B;AAAA,wBAASD,OAAO,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,mCAAqB;AAAA,wBAASF,OAAO,CAACG,IAAR,CAAaC,WAAb;AAAT;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGK;AAAG,YAAA,SAAS,EAAC,cAAb;AAAA,mCAA4B;AAAA,wBAAIJ,OAAO,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAHL,eAKI;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH,OAZa,CAAlB;AAcA,0BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiCH;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AAGD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH;;AAxD4B;;AA4DjC,eAAetB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\n\nclass Comments extends Component {\n\n    state = {\n        comments: [],\n        status: null\n    };\n\n\n    componentDidMount() {\n        let postId = this.props.match.params.id;\n        this.getComments(postId);\n    }\n\n    getComments = (postId) => {\n        let endpoint = 'https://jsonplaceholder.typicode.com/post/' + postId.toString() + '/comments';\n        axios.get(endpoint)\n            .then(res => {\n                this.setState({\n                    comments: res.data,\n                    status: 'success'\n                });\n            }).catch(err => {\n                this.setState({\n                    comments: [],\n                    status: 'failed'\n                });\n            });\n    };\n\n    render() {\n\n        if (this.state.comments.length > 0) {\n            let listComment = this.state.comments\n                .map((comment, index) => {\n                    return (\n                        <div key={index} className=\"alert alert-primary\">\n                            <p className=\"email\">from: <strong>{comment.email}</strong></p>\n                            <h4 className=\"mt-4\"><strong>{comment.name.toUpperCase()}</strong></h4>\n                             <p className=\"comment mt-3\"><i>{comment.body}</i></p>\n                             \n                            <hr />\n                        </div>\n\n                    );\n                });\n\n            return (\n                <div className=\"container mt-5\">{listComment}</div>\n            );\n        }\n\n\n        return (\n            <h1>comments</h1>\n\n        );\n    }\n}\n\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}