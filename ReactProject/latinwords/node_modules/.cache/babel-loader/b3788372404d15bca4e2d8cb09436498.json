{"ast":null,"code":"var _jsxFileName = \"/home/kiko/Escritorio/latin-words/latinwords/src/components/Search.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      query: null,\n      posts: [],\n      satus: null\n    };\n\n    this.getPosts = () => {\n      let endpoint = 'https://jsonplaceholder.typicode.com/posts';\n      axios.get(endpoint).then(res => {\n        this.setState({\n          posts: res.data,\n          status: 'success'\n        });\n      }).catch(err => {\n        this.setState({\n          posts: [],\n          status: 'failed'\n        });\n      });\n    };\n\n    this.getQuery = () => {\n      let query = this.props.match.params.query;\n      alert(query);\n    };\n  }\n\n  componentDidMount() {\n    this.getPosts();\n    this.getQuery();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/kiko/Escritorio/latin-words/latinwords/src/components/Search.js"],"names":["React","Component","axios","Search","state","query","posts","satus","getPosts","endpoint","get","then","res","setState","data","status","catch","err","getQuery","props","match","params","alert","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAMA,MAAMC,MAAN,SAAqBF,SAArB,CAA8B;AAAA;AAAA;AAAA,SAE1BG,KAF0B,GAElB;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAFkB;;AAAA,SAc1BC,QAd0B,GAcf,MAAM;AACb,UAAIC,QAAQ,GAAE,4CAAd;AACAP,MAAAA,KAAK,CAACQ,GAAN,CAAUD,QAAV,EACKE,IADL,CACYC,GAAD,IAAS;AACZ,aAAKC,QAAL,CAAc;AACVP,UAAAA,KAAK,EAAEM,GAAG,CAACE,IADD;AAEVC,UAAAA,MAAM,EAAE;AAFE,SAAd;AAIH,OANL,EAMQC,KANR,CAMeC,GAAD,IAAS;AACf,aAAKJ,QAAL,CAAc;AACVP,UAAAA,KAAK,EAAE,EADG;AAEVS,UAAAA,MAAM,EAAE;AAFE,SAAd;AAIH,OAXL;AAYH,KA5ByB;;AAAA,SA8B1BG,QA9B0B,GA8Bf,MAAM;AACb,UAAIb,KAAK,GAAG,KAAKc,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBhB,KAApC;AACAiB,MAAAA,KAAK,CAACjB,KAAD,CAAL;AACH,KAjCyB;AAAA;;AAQ1BkB,EAAAA,iBAAiB,GAAE;AACf,SAAKf,QAAL;AACA,SAAKU,QAAL;AACH;;AA0BDM,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH;;AA3CyB;;AA+C9B,eAAerB,MAAf","sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios';\n\n\n\n\n\nclass Search extends Component{\n\n    state = {\n        query: null,\n        posts: [],\n        satus: null\n    };\n\n    componentDidMount(){\n        this.getPosts();\n        this.getQuery();\n    }\n\n\n    getPosts = () => {\n        let endpoint= 'https://jsonplaceholder.typicode.com/posts';\n        axios.get(endpoint)\n            .then( (res) => {\n                this.setState({\n                    posts: res.data,\n                    status: 'success'\n                });\n            }). catch((err) => {\n                this.setState({\n                    posts: [],\n                    status: 'failed'\n                });\n            });\n    };\n\n    getQuery = () => {\n        let query = this.props.match.params.query;\n        alert(query);\n    };\n\n\n\n    render(){\n\n        return (\n            <h1>search</h1>\n\n        );\n    };\n}\n\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}